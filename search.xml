<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>『计算机组成原理』计组理论考试复习整理-1</title>
      <link href="/2022/11/20/CO-theory-1/"/>
      <url>/2022/11/20/CO-theory-1/</url>
      
        <content type="html"><![CDATA[<h2 id="定点数的表示"><a href="#定点数的表示" class="headerlink" title="定点数的表示"></a>定点数的表示</h2><h3 id="无符号数和有符号数"><a href="#无符号数和有符号数" class="headerlink" title="无符号数和有符号数"></a>无符号数和有符号数</h3><ul><li><strong>无符号数</strong><br>  没有符号位，8位数表示范围0 ~ 2^8^-1即0 ~ 255</li><li><strong>有符号数</strong><br>  有一个符号位</li></ul><h3 id="定点表示"><a href="#定点表示" class="headerlink" title="定点表示"></a>定点表示</h3><p>小数点位置不变</p><ul><li><strong>定点小数</strong><br>纯小数，第一位是符号位,符号位后全是小数位<ul><li>x~0~ = 0 ，最大值 1-2^-n^</li><li>x~0~ = 0 ，最小值 -(1-2^-n^)</li></ul></li><li><strong>定点整数</strong><br>纯整数，第一位是符号位，符号位后全是整数位<ul><li>x~0~ = 0 ，最大值 2^-n^ -1</li><li>x~0~ = 0 ，最小值 -(2^-n^ -1)</li></ul></li></ul><h3 id="原码、补码、反码（有符号位）"><a href="#原码、补码、反码（有符号位）" class="headerlink" title="原码、补码、反码（有符号位）"></a>原码、补码、反码（有符号位）</h3><ul><li><p><strong>原码</strong><br>  第一位符号位，其余位为绝对值</p><ul><li>小数原码<br>[0.1]~原~ = 0.1000000<br>[-0.1]~原~ = 1.1000000  </li><li><p>整数原码<br>[1]~原~ = 00000001<br>[-1]~原~ = 10000001</p><p>不同符号数加法需要先比较绝对值大小，再相减</p></li></ul></li><li><p><strong>补码</strong></p><ul><li>纯小数补码</li><li><p>整数补码<br>  [正]~补~ = 0（符号位），原值<br>  [负]~补~ = 1（符号位），原值取反加一</p><p>整数补码的零唯一，且多一个-2^n^</p></li></ul></li><li><strong>反码</strong><br>  零不唯一，[+0]~反~ = 0.0000,[-0]~反~ = 1.1111</li><li><strong>移码</strong></li></ul><h2 id="定点数的计算"><a href="#定点数的计算" class="headerlink" title="定点数的计算"></a>定点数的计算</h2><h3 id="定点数的移位"><a href="#定点数的移位" class="headerlink" title="定点数的移位"></a>定点数的移位</h3><ul><li><strong>算术移位</strong><br>  有符号位！<br>  符号位不变，无论正负原码都移位后补0，负数反补码会有差异。<br>  注意计算机的负数是由补码表示的，其实就是补充最高位。</li><li><strong>逻辑移位</strong><br>  无符号位<br>  移位都添0</li><li><strong>循环移位</strong></li></ul><h3 id="定点数的加减法"><a href="#定点数的加减法" class="headerlink" title="定点数的加减法"></a>定点数的加减法</h3><ul><li><strong>原码的加减法</strong><ul><li>加法<br>  先判符号位，绝对值加减，再补符号位<br>  溢出位丢掉</li><li>减法<br>  减数符号取反加原码</li></ul></li><li><strong>补码的加减法</strong><br>  计算机普遍采用补码加减<ul><li>补码加减补码等于补码</li><li>符号位参与运算，进位丢掉</li></ul></li></ul><h2 id="符号拓展"><a href="#符号拓展" class="headerlink" title="符号拓展"></a>符号拓展</h2><h2 id="溢出概念和判定方法"><a href="#溢出概念和判定方法" class="headerlink" title="溢出概念和判定方法"></a>溢出概念和判定方法</h2><ul><li><strong>采用一位符号位</strong></li><li><strong>采用双符号位</strong></li></ul><h2 id="定点数的乘法"><a href="#定点数的乘法" class="headerlink" title="定点数的乘法"></a>定点数的乘法</h2><h2 id="定点数的除法"><a href="#定点数的除法" class="headerlink" title="定点数的除法"></a>定点数的除法</h2>]]></content>
      
      
      
        <tags>
            
            <tag> 计算机组成原理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>『博客搭建』搭建snail主题的github博客踩坑历程回顾及建议</title>
      <link href="/2022/11/10/blogToBuildBlog/"/>
      <url>/2022/11/10/blogToBuildBlog/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>搭建本博客时主要参考了 6 系师兄的<a href="https://saltyfishyjk.github.io/2022/01/28/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%9B%9E%E9%A1%BE%E6%A6%82%E8%A7%88/" target="_blank" rel="noopener"><strong>搭建教程指路</strong></a><br>本文主要是对师兄的教程作出了一些个人补充<br>（笔者当时理解不透弄错而走了很久的弯路，想要补充分享更傻瓜式的搭建过程）<br>同时，笔者能力有限，本文还有许多不足，希望大家看到后能够指导一下笔者。</p><pre><code>注: 本文不涉及hexo、npm、git等基础知识的介绍，谷歌或百度自主搜索关键词即可得到相关信息    通过本文    你能得到一些上述博客未曾提到的细节问题和一个博客搭建历程建议    但无法实现博客更多细节的美化和获得相关知识的科普    假如搭建过程遇到了其他难题，推荐学会利用谷歌搜索</code></pre><h1 id="博客搭建顺序建议"><a href="#博客搭建顺序建议" class="headerlink" title="博客搭建顺序建议"></a>博客搭建顺序建议</h1><h2 id="对于尝试建立过-github-博客且已建立-github-io-库的读者"><a href="#对于尝试建立过-github-博客且已建立-github-io-库的读者" class="headerlink" title="对于尝试建立过 github 博客且已建立 github.io 库的读者"></a>对于尝试建立过 github 博客且已建立 github.io 库的读者</h2><ul><li>在<strong>对应的 github.io 库</strong>中的<strong>settings</strong>中将<strong>branches 名称</strong>从 main 修改成 master</li><li>阅读通用建议</li></ul><h2 id="对于未建立过-github-库，没有尝试过建立博客的读者"><a href="#对于未建立过-github-库，没有尝试过建立博客的读者" class="headerlink" title="对于未建立过 github 库，没有尝试过建立博客的读者"></a>对于未建立过 github 库，没有尝试过建立博客的读者</h2><ul><li>阅读<a href="https://segmentfault.com/a/1190000017986794" target="_blank" rel="noopener"><strong>hexo+Github Pages 搭建教程</strong></a>并完成所有步骤<br>注：该教程中的 hexo init myBlog 和 cd myBlog 操作笔者是用 hexo init blog 和 cd blog 实现的。（只是改了个名字）</li><li>阅读通用建议</li></ul><h2 id="通用建议"><a href="#通用建议" class="headerlink" title="通用建议"></a>通用建议</h2><p>假如你不想遇到奇奇怪怪的 error 提醒，小白最好先不要进行其他配置文件的修改。。</p><h4 id="1、按照snail-主题官方仓库的-README-教程进行到到-Configuration"><a href="#1、按照snail-主题官方仓库的-README-教程进行到到-Configuration" class="headerlink" title="1、按照snail 主题官方仓库的 README 教程进行到到 Configuration"></a>1、按照<a href="https://github.com/dusign/hexo-theme-snail" target="_blank" rel="noopener">snail 主题官方仓库</a>的 README 教程进行到到 Configuration</h4><pre><code>教程前面提到的的建立hexo init blog和cd blog大家已经实现了！只需要在blog文件夹中右键 git bash here就可以了</code></pre><h4 id="2、跳到修改本地-config-中-Deployment-的配置信息"><a href="#2、跳到修改本地-config-中-Deployment-的配置信息" class="headerlink" title="2、跳到修改本地_config 中 Deployment 的配置信息"></a>2、跳到修改本地_config 中 Deployment 的配置信息</h4><p>原配置信息</p><pre><code># Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy:  type: git  repo:    github: github.repository.address    coding:coding.repository.address  branch: master</code></pre><p>配置后信息</p><pre><code># Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy:  type: git  repo:    github: git@github.com:xxx/xxx.github.io.git    coding: https://e.coding.net/xxxxx  branch: master</code></pre><p>请注意</p><ul><li>这里 coding 是指腾讯的<a href="https://coding.net/" target="_blank" rel="noopener">CODING DevOps</a><br>需要读者在免费注册使用后在项目中创建 DevOps 项目并进行选择克隆 https 复制地址信息</li><li><p>我的 github 库地址是利用 ssh 克隆的代码库仓库（电脑之前配置了 github 的 ssh）<br>但我的 coding 库地址是利用 https 克隆的代码库仓库<br>（按照上述步骤搭建的你理应也是这样）</p><pre><code>    这里涉及到电脑设置多个ssh key的问题    若读者感兴趣可以谷歌搜索自行了解    笔者为了减少工作量并没有做这一步    这学期也不再需要换多个ssh了，下学期可能会进行研究并写分享博客    假如你使用https克隆，那么在hexo d一步中将需要输入账号密码。    假如利用ssh密钥克隆，那么要提前在库中实现ssh key绑定</code></pre></li></ul><h4 id="3、在-blog-中-git-bash-here-再利用指令完成博客的搭建与上传"><a href="#3、在-blog-中-git-bash-here-再利用指令完成博客的搭建与上传" class="headerlink" title="3、在 blog 中 git bash here 再利用指令完成博客的搭建与上传"></a>3、在 blog 中 git bash here 再利用指令完成博客的搭建与上传</h4><p>主要利用以下三条指令（上附教程中有讲到是干什么的）</p><pre><code>hexo ghexo shexo d</code></pre><p>至于下面这种上传方式，我一般在不打算浏览本地网站的时候用</p><pre><code>hexo cleanhexo g -d</code></pre><p>注意：这里有的同学会出现这种情况</p><p><img src="error1.png" alt="2022-11-10-blogToBuildBlog"></p><p>这里大家要注意这种情况我们看的不是 Error：Spawn Failed 这一行，而是往上看可以看到一行 remote：Repository not found<br>这里说了我们找不到这个仓库，这种问题的出现，很大可能是因为有的同学的 ssh 在部分课程修改后没有改回来。重新设置一遍 github 的 ssh 就能解决这个问题！</p><h4 id="阅读到这里，你就可以在自己的-Github-Pages-相关网址中看到属于自己的博客网站啦！"><a href="#阅读到这里，你就可以在自己的-Github-Pages-相关网址中看到属于自己的博客网站啦！" class="headerlink" title="阅读到这里，你就可以在自己的 Github Pages 相关网址中看到属于自己的博客网站啦！"></a>阅读到这里，你就可以在自己的 Github Pages 相关网址中看到属于自己的博客网站啦！</h4><p>辣么，快去试试看吧！</p><h1 id="笔者在博客美化中做出的修改建议"><a href="#笔者在博客美化中做出的修改建议" class="headerlink" title="笔者在博客美化中做出的修改建议"></a>笔者在博客美化中做出的修改建议</h1><h2 id="修改前的建议"><a href="#修改前的建议" class="headerlink" title="修改前的建议"></a>修改前的建议</h2><ul><li><p>备份 blog 文件夹</p><p>可以选择 git 或者本地备份<br>反正一定要备份！！！（一个下午和一个晚上血和泪的教训）</p></li></ul><h2 id="笔者做出的相关修改"><a href="#笔者做出的相关修改" class="headerlink" title="笔者做出的相关修改"></a>笔者做出的相关修改</h2><p>这里仅涉及官方仓库教程中没提到或者不容易找到的<br>且笔者修改过的</p><h4 id="blog-config-yml"><a href="#blog-config-yml" class="headerlink" title="blog_config.yml"></a>blog_config.yml</h4><ul><li>大部分内容<br>根据官方仓库教程修改就可以，官方仓库没提到的大部分都是其他配置信息，需要读者额外了解<br>笔者主要将不需要的内容注释掉或修改成 enable: false<br>这里每个人审美不同，可以自由发挥<br>通过单词词义理解一下或者尝试一下不会遇到太大问题，出现问题恢复原来的就行了</li><li>URL<br>请不要修改！！！<br>hexo 官方教程中是要修改这里的。。但是小白别碰就行了。<br>笔者目前也没有弄懂原理。但是不修改就不会出现问题，修改后会报错。这里卡了笔者很久</li><li>comment（评论系统）<br>按<a href="https://www.cnblogs.com/Johnson-lin/p/11386877.html" target="_blank" rel="noopener">该教程</a>走就好了<br>但是我报错咧 不清楚。</li></ul><h4 id="blog-source"><a href="#blog-source" class="headerlink" title="blog\source"></a>blog\source</h4><pre><code>这里可以修改导航页（也就是右上角），点进去文件夹修改index就会知道怎么修改了。不需要的就选择删除。</code></pre><h4 id="blog-themes-snail-layout-partial-footer-ejs"><a href="#blog-themes-snail-layout-partial-footer-ejs" class="headerlink" title="blog\themes\snail\layout_partial\footer.ejs"></a>blog\themes\snail\layout_partial\footer.ejs</h4><pre><code>在这里可以将页面低端的powered by内容和star的链接改成自己的github账号信息但笔者由于喜欢更简洁的页面，关掉了底部的转发功能。该文件中其他信息笔者并没有修改。若有需要，请读者自行修改地址、名称等信息。</code></pre><p>修改片段前</p><pre><code>&lt;p class=&quot;copyright text-muted&quot;&gt;                    Copyright &amp;copy; &lt;%= config.author %&gt; &lt;%= new Date().getFullYear() %&gt;                    &lt;br&gt;                    Powered by                    &lt;a href=&quot;https://github.com/dusign/hexo-theme-snail&quot;&gt;                        &lt;i&gt;hexo-theme-snail&lt;/i&gt;                    &lt;/a&gt; |                    &lt;iframe name=&quot;star&quot; style=&quot;margin-left: 2px; margin-bottom:-5px;&quot; frameborder=&quot;0&quot; scrolling=&quot;0&quot;                        width=&quot;100px&quot; height=&quot;20px&quot;                        src=&quot;https://ghbtns.com/github-btn.html?user=dusign&amp;repo=hexo-theme-snail&amp;type=star&amp;count=true&quot;&gt;                    &lt;/iframe&gt;                &lt;/p&gt;</code></pre><p>修改片段后（读者只需自行比对便可理解）</p><pre><code>&lt;p class=&quot;copyright text-muted&quot;&gt;                    Copyright &amp;copy; &lt;%= config.author %&gt; &lt;%= new Date().getFullYear() %&gt;                    &lt;br&gt;                    Powered by                    &lt;a href=&quot;https://github.com/==ChenJulian==/ChenJulian.github.io.git&quot;&gt;                        &lt;i&gt;ChenJulian&lt;/i&gt;                    &lt;/a&gt; |                    &lt;iframe name=&quot;star&quot; style=&quot;margin-left: 2px; margin-bottom:-5px;&quot; frameborder=&quot;0&quot; scrolling=&quot;0&quot;                        width=&quot;100px&quot; height=&quot;20px&quot;                        src=&quot;https://ghbtns.com/github-btn.html?user=ChenJulian&amp;repo=ChenJulian.github.io&amp;type=star&amp;count=true&quot;&gt;                    &lt;/iframe&gt;                &lt;/p&gt;</code></pre><h1 id="04-结语"><a href="#04-结语" class="headerlink" title="04 结语"></a>04 结语</h1><ul><li>由于笔者知识量有限，上文必定有不够完善的地方，希望大家理解。假如有所错漏，希望大家联系我修改，以免误导他人。</li><li><p>且笔者正在被流水线 CPU CPU（CPU 完了，来补充博客了！！）<br>目前得先安排时间去完成流水线 CPU 的代码编写和调试，博客内容的更多修改和搜寻上文笔者不懂的知识点等计划都得搁浅了。</p><blockquote><p>包括但不限于：</p><ul><li>博客评论区的完善和探索(×)</li><li>博客提交百度和谷歌收录</li><li>博客文章右边目录的错误显示</li></ul></blockquote><p>本文章在笔者后续了解后会持续更新内容！</p></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
